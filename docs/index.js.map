{
  "version": 3,
  "sources": ["../docs/index.js"],
  "sourcesContent": ["// add canvas to the script\r\n(function () {\r\n  const canvas = document.getElementById(\"gameCanvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n})();\r\n\r\n// initialize config variables here\r\nlet canvas, ctx;\r\n\r\n// set game patameters\r\nlet board_size = 4, line_scale = 1/8;\r\n\r\n// initialize game with parameters\r\n\r\nclass Pawn {\r\n  constructor(location = { x: 0, y: 0 }, suit = \"dimgray\") {\r\n    this.location = location;\r\n    this.suit = suit;\r\n  }\r\n\r\n  draw(scale, current_suit) {\r\n    // destructuring\r\n    const { location, suit } = this;\r\n\r\n    // saves the current styles set elsewhere\r\n    // to avoid overwriting them\r\n    ctx.save();\r\n\r\n    // set the styles for this shape\r\n    ctx.fillStyle = this.suit;\r\n\r\n    let line_size = scale * line_scale;\r\n\r\n    ctx.lineWidth = line_size;\r\n\r\n    // create the *path*\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"black\";\r\n\r\n    // set up scale and stuff\r\n    let p_scale = 0.5;\r\n    let p_size = scale * p_scale;\r\n    let p_offset = p_size * 0.5;\r\n\r\n    ctx.rect(\r\n      this.location.x * scale + p_offset,\r\n      this.location.y * scale + p_offset,\r\n      p_size,\r\n      p_size\r\n    );\r\n\r\n    // draw the path to screen\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = line_size / 2;\r\n    if (current_suit == this.suit) {\r\n      ctx.strokeStyle = \"gold\";\r\n    } else {\r\n      ctx.strokeStyle = \"white\";\r\n    }\r\n\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nclass board {\r\n  constructor(size = 4) {\r\n    this.size = size;\r\n    this.stones = Array(size * 2);\r\n    this.selected_stone_index = -1;\r\n    this.current_suit = \"dimgray\";\r\n    this.scale = canvas.width / this.size;\r\n  }\r\n\r\n  get_pawn(x = 0, y = 0) {\r\n    for (let i = 0; i < this.stones.length; i++) {\r\n      if (this.stones[i].location.x === x && this.stones[i].location.y === y) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  capture_pawns(stone, stones) {\r\n    // check this stone for nearby pawns\r\n\r\n    let dirs = [\r\n      { x: 1, y: 0 },\r\n      { x: -1, y: 0 },\r\n      { x: 0, y: -1 },\r\n      { x: 0, y: 1 },\r\n    ];\r\n    for (let k = 0; k < 4; k++) {\r\n      let capturable = Array(0);\r\n\r\n      // right\r\n      for (let i = 1; i < this.size; i++) {\r\n        let pawn_i = this.get_pawn(\r\n          stone.location.x + dirs[k].x * i,\r\n          stone.location.y + dirs[k].y * i\r\n        );\r\n        if (pawn_i === -1) {\r\n          break;\r\n        }\r\n        if (stones[pawn_i].suit != stone.suit) {\r\n          capturable.push(stones[pawn_i]);\r\n        }\r\n\r\n        if (stones[pawn_i].suit === stone.suit) {\r\n          // remove the previous pawns\r\n          for (let j = 0; j < capturable.length; j++) {\r\n            stones.splice(\r\n              this.get_pawn(capturable[j].location.x, capturable[j].location.y),\r\n              1\r\n            );\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  draw_board() {\r\n    // blank the screen\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // draw the eight lines and stuff\r\n    ctx.save();\r\n\r\n    // start with selection box thing... I want yellow\r\n    if (\r\n      this.selected_stone_index != -1 &&\r\n      this.stones[this.selected_stone_index].suit === this.current_suit\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"gold\";\r\n      ctx.strokeStyle = \"darkorange\";\r\n\r\n      ctx.rect(\r\n        this.stones[this.selected_stone_index].location.x * this.scale +\r\n          this.scale * 0.1,\r\n        this.stones[this.selected_stone_index].location.y * this.scale +\r\n          this.scale * 0.1,\r\n        0.8 * this.scale,\r\n        0.8 * this.scale\r\n      );\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n\r\n    // horiz lines\r\n    for (let i = 0; i < 4; i++) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = this.scale * line_scale;\r\n      ctx.strokeStyle = \"darkgray\";\r\n      let dx1, dy1, dx2;\r\n      dx1 = 0.5 * this.scale;\r\n      dy1 = this.scale * i + 0.5 * this.scale;\r\n      dx2 = canvas.width - 0.5 * this.scale;\r\n\r\n      ctx.moveTo(dx1, dy1);\r\n      ctx.lineTo(dx2, dy1);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // virt lines\r\n    for (let i = 0; i < 4; i++) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = this.scale * line_scale;\r\n      ctx.strokeStyle = \"darkgray\";\r\n      let dx1, dy1, dy2;\r\n      dy1 = 0.5 * this.scale;\r\n      dx1 = this.scale * i + 0.5 * this.scale;\r\n\r\n      dy2 = canvas.height - 0.5 * this.scale;\r\n      ctx.moveTo(dx1, dy1);\r\n      ctx.lineTo(dx1, dy2);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // horiz flavor\r\n    for (let i = 0; i < 4; i++) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = this.scale * line_scale * 0.5;\r\n      ctx.strokeStyle = \"white\";\r\n      let dx1, dy1, dx2;\r\n      dx1 = 0.5 * this.scale;\r\n      dy1 = this.scale * i + 0.5 * this.scale;\r\n\r\n      dx2 = canvas.width - 0.5 * this.scale;\r\n      ctx.moveTo(dx1, dy1);\r\n      ctx.lineTo(dx2, dy1);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // virt flavor\r\n    for (let i = 0; i < 4; i++) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = this.scale * line_scale * 0.5;\r\n      ctx.strokeStyle = \"white\";\r\n      let dx1, dy1, dy2;\r\n      dy1 = 0.5 * this.scale;\r\n      dx1 = this.scale * i + 0.5 * this.scale;\r\n\r\n      dy2 = canvas.height - 0.5 * this.scale;\r\n      ctx.moveTo(dx1, dy1);\r\n      ctx.lineTo(dx1, dy2);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    // draw pawns\r\n    for (let i = 0; i < this.stones.length; i++) {\r\n      this.stones[i].draw(this.scale, this.current_suit);\r\n    }\r\n  }\r\n\r\n  set_board() {\r\n    this.stones = Array(this.size * 2);\r\n    this.current_suit = \"tomato\";\r\n    for (let i = 0; i < this.stones.length; i++) {\r\n      if (i < this.size) {\r\n        this.stones[i] = new Pawn({ x: i, y: 0 }, \"dimgray\");\r\n      } else {\r\n        this.stones[i] = new Pawn(\r\n          { x: i - this.size, y: this.size - 1 },\r\n          \"tomato\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nlet game_board;\r\n\r\nfunction on_click(event) {\r\n  // get mouse location as board coordinates\r\n  let bx = ~~(\r\n    (event.offsetX - 0.5 * game_board.scale) / game_board.scale +\r\n    0.5\r\n  );\r\n  let by = ~~(\r\n    (event.offsetY - 0.5 * game_board.scale) / game_board.scale +\r\n    0.5\r\n  );\r\n\r\n  for (let i = 0; i < game_board.stones.length; i++) {\r\n    // select a pawn\r\n    if (\r\n      game_board.stones[i].location.x === bx &&\r\n      game_board.stones[i].location.y === by\r\n    ) {\r\n      game_board.selected_stone_index = i;\r\n      game_board.draw_board();\r\n      return;\r\n    }\r\n  }\r\n\r\n  // if selection is valid\r\n  if (\r\n    game_board.selected_stone_index != -1 &&\r\n    game_board.stones[game_board.selected_stone_index].suit ===\r\n      game_board.current_suit\r\n  ) {\r\n    // check if move is in range\r\n    let distx =\r\n      game_board.stones[game_board.selected_stone_index].location.x - bx;\r\n    let disty =\r\n      game_board.stones[game_board.selected_stone_index].location.y - by;\r\n    let dist = Math.sqrt(distx * distx + disty * disty);\r\n\r\n    if (dist === 1) {\r\n      game_board.stones[game_board.selected_stone_index].location.x = bx;\r\n      game_board.stones[game_board.selected_stone_index].location.y = by;\r\n\r\n      game_board.capture_pawns(\r\n        game_board.stones[game_board.selected_stone_index],\r\n        game_board.stones\r\n      );\r\n      // invalidate current selection\r\n      game_board.selected_stone_index = -1;\r\n\r\n      // flop current suit\r\n      if (game_board.current_suit == \"dimgray\") {\r\n        game_board.current_suit = \"tomato\";\r\n      } else {\r\n        game_board.current_suit = \"dimgray\";\r\n      }\r\n    }\r\n  }\r\n  game_board.draw_board();\r\n}\r\n\r\n// setup config variables and start the program\r\nfunction init() {\r\n  canvas = document.getElementById(\"gameCanvas\");\r\n  canvas.onclick = on_click;\r\n\r\n  ctx = canvas.getContext(\"2d\");\r\n\r\n  game_board = new board(board_size);\r\n  game_board.set_board();\r\n\r\n  game_board.draw_board();\r\n}\r\n\r\n// wait for the HTML to load\r\ndocument.addEventListener(\"DOMContentLoaded\", init);\r\n"],
  "mappings": "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",
  "names": []
}
